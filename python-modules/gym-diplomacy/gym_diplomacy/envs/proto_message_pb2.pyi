# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    List as typing___List,
    Mapping as typing___Mapping,
    MutableMapping as typing___MutableMapping,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class Command(google___protobuf___message___Message):
    class CommandType(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> Command.CommandType: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[Command.CommandType]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, Command.CommandType]]: ...
    START_TEST = typing___cast(CommandType, 0)
    RESULTS = typing___cast(CommandType, 1)
    SHUTDOWN = typing___cast(CommandType, 3)

    type = ... # type: Command.CommandType
    name = ... # type: typing___Text

    @property
    def data(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[GameData]: ...

    def __init__(self,
        type : typing___Optional[Command.CommandType] = None,
        name : typing___Optional[typing___Text] = None,
        data : typing___Optional[typing___Iterable[GameData]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Command: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"data",u"name",u"type"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"data",b"name",b"type"]) -> None: ...

class PowerData(google___protobuf___message___Message):
    class PowerName(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> PowerData.PowerName: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[PowerData.PowerName]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, PowerData.PowerName]]: ...
    NONE = typing___cast(PowerName, 0)
    AUS = typing___cast(PowerName, 1)
    ENG = typing___cast(PowerName, 2)
    FRA = typing___cast(PowerName, 3)
    GER = typing___cast(PowerName, 4)
    ITA = typing___cast(PowerName, 5)
    RUS = typing___cast(PowerName, 6)
    TUR = typing___cast(PowerName, 7)

    name = ... # type: PowerData.PowerName

    def __init__(self,
        name : typing___Optional[PowerData.PowerName] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PowerData: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"name"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"name"]) -> None: ...

class RegionData(google___protobuf___message___Message):
    name = ... # type: typing___Text
    adjacentRegionsName = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]

    def __init__(self,
        name : typing___Optional[typing___Text] = None,
        adjacentRegionsName : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> RegionData: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"adjacentRegionsName",u"name"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"adjacentRegionsName",b"name"]) -> None: ...

class ProvinceData(google___protobuf___message___Message):
    class NameToRegionsEntry(google___protobuf___message___Message):
        key = ... # type: typing___Text

        @property
        def value(self) -> RegionData: ...

        def __init__(self,
            key : typing___Optional[typing___Text] = None,
            value : typing___Optional[RegionData] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> ProvinceData.NameToRegionsEntry: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"value"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"key",u"value"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"value",b"value"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[b"key",b"value"]) -> None: ...

    name = ... # type: typing___Text
    sc = ... # type: bool

    @property
    def owner(self) -> PowerData: ...

    @property
    def nameToRegions(self) -> typing___MutableMapping[typing___Text, RegionData]: ...

    def __init__(self,
        name : typing___Optional[typing___Text] = None,
        owner : typing___Optional[PowerData] = None,
        sc : typing___Optional[bool] = None,
        nameToRegions : typing___Optional[typing___Mapping[typing___Text, RegionData]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ProvinceData: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"owner"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name",u"nameToRegions",u"owner",u"sc"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"owner",b"owner"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"name",b"nameToRegions",b"owner",b"sc"]) -> None: ...

class GameData(google___protobuf___message___Message):
    class NameToProvincesEntry(google___protobuf___message___Message):
        key = ... # type: typing___Text

        @property
        def value(self) -> ProvinceData: ...

        def __init__(self,
            key : typing___Optional[typing___Text] = None,
            value : typing___Optional[ProvinceData] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> GameData.NameToProvincesEntry: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"value"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"key",u"value"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"value",b"value"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[b"key",b"value"]) -> None: ...


    @property
    def nameToProvinces(self) -> typing___MutableMapping[typing___Text, ProvinceData]: ...

    @property
    def ownPower(self) -> PowerData: ...

    def __init__(self,
        nameToProvinces : typing___Optional[typing___Mapping[typing___Text, ProvinceData]] = None,
        ownPower : typing___Optional[PowerData] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GameData: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"ownPower"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"nameToProvinces",u"ownPower"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"ownPower",b"ownPower"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"nameToProvinces",b"ownPower"]) -> None: ...

class MoveOrder(google___protobuf___message___Message):

    @property
    def startRegion(self) -> RegionData: ...

    @property
    def destinationRegion(self) -> RegionData: ...

    def __init__(self,
        startRegion : typing___Optional[RegionData] = None,
        destinationRegion : typing___Optional[RegionData] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> MoveOrder: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"destinationRegion",u"startRegion"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"destinationRegion",u"startRegion"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"destinationRegion",b"destinationRegion",u"startRegion",b"startRegion"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"destinationRegion",b"startRegion"]) -> None: ...

class OrderCommitment(google___protobuf___message___Message):

    @property
    def move(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[MoveOrder]: ...

    def __init__(self,
        move : typing___Optional[typing___Iterable[MoveOrder]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> OrderCommitment: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"move"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"move"]) -> None: ...

class DealData(google___protobuf___message___Message):

    @property
    def oc(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[OrderCommitment]: ...

    def __init__(self,
        oc : typing___Optional[typing___Iterable[OrderCommitment]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> DealData: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"oc"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"oc"]) -> None: ...
