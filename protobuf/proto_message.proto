syntax = "proto3";

package dip_q;

option java_package = "cruz.agents";

/**
It's important that the communication between modules remains as simple as possible.
Therefore, in this message, we are ONLY sending and receiving arrays of integers.
**/

message BandanaRequest {

  enum Type {
    INVALID = 0;
    SEND_INITIAL_OBSERVATION = 1;
    GET_DEAL_REQUEST = 2;
    GET_ACCEPTANCE_REQUEST = 3;
    SEND_GAME_END = 4;
  }

  // Using "required" is often bad practice. Generally, the validation
  // should be application-specific in order to make maintenance easier.
  // In proto3 syntax, "optional" is the default field

  Type type = 1;
  ObservationData observation = 2;
}

message DiplomacyGymResponse {
  enum Type {
    INVALID = 0;
    CONFIRM = 1;
    SEND_DEAL = 2;
    SEND_ACCEPTANCE = 3;
  }

  Type type = 1;
  DealData deal = 2;
  AcceptanceData acceptance = 3;
}

message DiplomacyGymOrdersResponse {
  enum Type {
    INVALID = 0;
    VALID = 1;
  }

  Type type = 1;
  OrdersData orders = 2;
}

message ObservationData {
  repeated ProvinceData provinces = 1;
  float previousActionReward = 2;
  bool done = 3;
  string info = 4;
  int32 player = 5;
}

message ProvinceData {
  int32 id = 1;
  int32 owner = 2;
  int32 sc = 3;
  int32 unit = 4;
}

message AcceptanceData {

}

message DealData {
  int32 powerToPropose = 1;
  int32 startProvince = 2;
  int32 destinationProvince = 3;
}

message OrderData {
  int32 start = 1;
  int32 action = 2;
  int32 destination = 3;
}

message OrdersData {
  repeated OrderData orders = 1;
}

